{"version":3,"sources":["components/AddCategoria.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategoria","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"iMAGaA,EAAe,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KA2BjD,OAEI,sBAAMC,SAjBY,SAACC,GAEnBA,EAAEC,iBAIEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAQlB,SAEI,uBAEMO,KAAK,OACLC,MAAQT,EACRU,SA9Ba,SAAEP,GAEzBF,EAAeE,EAAEQ,OAAOF,a,+BCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE7B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbrB,kBAkBbM,GAlBa,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAIrC,OAEI,sBAAKc,UAAU,2CAAf,UAEI,qBAAKC,IAAMf,EAAMgB,IAAMN,IAEvB,kCAAMA,EAAN,WCLEO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECDf,SAAEA,GAAgB,IAAD,EAEfd,mBAAS,CAE/BqB,KAAK,GACLa,SAAS,IAL4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAkCzC,OAzBAC,qBAAW,WAIPxB,EAASC,GAELwB,MAAM,SAAAC,GAGFC,YAAY,WAERC,QAAQC,IAAIH,GAEZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGd,UAIZ,CAAEpB,IAGEqB,ED9B0BQ,CAAc7B,GAAlCa,EAH0B,EAG/BN,KAAaa,EAHkB,EAGlBA,QAErB,OAEE,qCACE,qBAAIJ,UAAU,0CAAd,cAA2DhB,EAA3D,OAEEoB,GAAW,mBAAGJ,UAAU,iBAAb,yBAEb,qBAAKA,UAAU,YAAf,SAGWH,EAAOJ,KAAM,SAAAC,GAAG,OAEZ,cAAC,EAAD,eAGUA,GADEA,EAAIC,aErB1BmB,EAAe,WAAM,MAGK5C,mBAAS,CAAC,cAHf,mBAGxB6C,EAHwB,KAGZ9C,EAHY,KAY9B,OAEI,qCAEE,gDAEA,cAAE,EAAF,CAAeA,cAAkBA,IAEjC,uBAEC,6BAEQ8C,EAAWtB,KAAK,SAAAT,GAAS,OACxB,cAAE,EAAF,CAGIA,UAAcA,GADPA,Y,MCzB7BgC,IAASC,OAEL,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.13e1f70e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategoria = ( { setCategorias } ) => {\r\n\r\n     const [inputValue, setInputValue] = useState('');\r\n    \r\n     //Capturando lo que se escribe en el input\r\n     const handleInputChange = ( e ) => {\r\n\r\n        setInputValue( e.target.value );\r\n     }\r\n\r\n     //Evento con la tecla enter\r\n\r\n     const handleSubmit = (e) => {\r\n        //Desactiavndo el refrescamiento de la pagina al hacer enter en el input\r\n        e.preventDefault();\r\n\r\n        //Validacion en lo que viene en input, para que se limpie y borre espacios al hacer enter\r\n\r\n        if( inputValue.trim().length > 2 ){//Con .trin() borro espacio antes y despues y con .length mido la palabra que sea mayor que dos \r\n            \r\n            setCategorias( cats => [ inputValue, ...cats ] );\r\n            setInputValue('');//limpiando el Input al hacer enter\r\n        }\r\n       \r\n     } \r\n\r\n\r\n    return (\r\n\r\n        <form onSubmit={ handleSubmit } >\r\n        \r\n            <input\r\n                  \r\n                  type=\"text\"\r\n                  value={ inputValue }\r\n                  onChange={ handleInputChange }\r\n            \r\n            />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategoria.propTypes = {\r\n\r\n    setCategorias: PropTypes.func.isRequired\r\n\r\n}\r\n","//Funcion que me trae los gifs\r\n\r\nexport const getGifs = async( categoria ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( categoria ) }&limit=10&api_key=fL60sX7fR5AL49YLmZlMoRt5WYyFGY0c`;\r\n    \r\n    const resp = await fetch( url );\r\n\r\n    const { data } = await resp.json();\r\n\r\n    const  gifs = data.map( img => {\r\n\r\n      return {\r\n          id: img.id,\r\n          title: img.title,\r\n          url: img.images?.downsized_medium.url\r\n      }\r\n\r\n    })\r\n\r\n   return gifs ;\r\n\r\n }","import React from 'react';\r\n\r\nexport const GifGridItem = ( { id, title,url }) => {\r\n\r\n    //console.log(id, title,url);\r\n\r\n    return (\r\n\r\n        <div className=\"card animate__animated animate__backInUp\">\r\n            \r\n            <img src={ url } alt={ title }/>\r\n\r\n            <p> { title } </p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","//import React, { useState, useEffect } from 'react';\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const  GifGrid = ({ categoria }) => {\r\n  \r\n    //////////usando mi hook creado como useFetchGifs//////////////////\r\n    const { data:images, loading } = useFetchGifs( categoria );\r\n\r\n    return (\r\n\r\n      <>\r\n        <h3 className=\"animate__animated animate__bounceInDown\"> { categoria } </h3>\r\n\r\n        { loading && <p className=\"animate__jello\" >Cargando...</p>}\r\n\r\n        <div className=\"card-grid\">\r\n    \r\n             {\r\n                   images.map(  img => (\r\n\r\n                       <GifGridItem \r\n\r\n                            key= { img.id}\r\n                            { ...img }\r\n                        \r\n                       /> \r\n                                           \r\n                   ))\r\n             }            \r\n  \r\n        </div>\r\n\r\n      </>\r\n    )\r\n}\r\n","//Los hooks no son mas que funciones siempre se identifica un hooks con el nombre de useNombreAlgo.js\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n\r\n    const [state, setState] = useState({\r\n\r\n        data:[],\r\n        loading: true\r\n\r\n    });\r\n\r\n    useEffect (() => {\r\n\r\n        //Haciendo mi peticion HTTPS y trallendo mis imagenes GIFs\r\n\r\n        getGifs( categoria )\r\n\r\n           .then( imgs => {\r\n\r\n            \r\n                setTimeout( () => {\r\n\r\n                    console.log(imgs);\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                    \r\n                }, 1000);\r\n\r\n           })\r\n\r\n    }, [ categoria ])\r\n\r\n\r\n    return state;//{ data:[], loading: true};\r\n\r\n\r\n}\r\n\r\n\r\n","\r\nimport React, { useState } from 'react';\r\nimport { AddCategoria } from './components/AddCategoria';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n   // const categorias = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n   const [categorias, setCategorias] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () =>{\r\n       \r\n    //     //setCategorias(['Pokemon', ...categorias]);//Agregando una categoria a mi lista con el boton\r\n    //     setCategorias( cats => [ ...cats, 'Naruto'] );//Otra forma de agregar una ctegoria usando un colbak \r\n        \r\n    // }\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n          <h2> GifExpertApp </h2>\r\n          \r\n          < AddCategoria setCategorias = { setCategorias }/>\r\n\r\n          <hr/> \r\n          \r\n           <ol>\r\n               {\r\n                   categorias.map( categoria => (\r\n                    < GifGrid \r\n                         \r\n                        key= { categoria }\r\n                        categoria = { categoria }\r\n                    \r\n                    />\r\n                  // return <li key={categoria} > { categoria } </li>\r\n                   \r\n                   ))\r\n\r\n               }  \r\n                              \r\n            </ol>  \r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n// import GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n \n  ReactDOM.render( \n  \n      <GifExpertApp  />,\n      \n      document.getElementById('root') );\n\n"],"sourceRoot":""}